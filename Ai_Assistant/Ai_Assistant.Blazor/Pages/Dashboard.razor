
@page "/dashboard"
@using Ai_Assistant
@using System
@using System.Globalization
@inject ToDoIntegration ToDoIntegration
@inject PrayerTimes PrayerTimes
@inject ActivityWatchIntegration ActivityWatchIntegration
@inject WifiPresence WifiPresence
@inject ISettingsService SettingsService

<h1>AI Assistant Dashboard</h1>

<div class="row">
    <div class="col">
        <h2>Tasks</h2>
        <ul>
            @if (overdueTasks == null)
            {
                <li>Loading...</li>
            }
            else if (overdueTasks.Count == 0)
            {
                <li>No overdue tasks!</li>
            }
            else
            {
                foreach (var task in overdueTasks)
                {
                    <li>@task</li>
                }
            }
        </ul>
    </div>
    <div class="col">
        <h2>Prayer Times</h2>
        @if (prayerTimes == null)
        {
            <p>Loading...</p>
        }
        else
        {
            <p>@prayerTimes</p>
        }
    </div>
    <div class="col">
        <h2>PC Activity</h2>
        <p>@activity</p>
    </div>
    <div class="col">
        <h2>Home Presence</h2>
        <p>@(isHome ? "Phone is connected to Wi-Fi." : "Phone is not connected.")</p>
    </div>
</div>

@code {
    private List<string> overdueTasks = new();
    private string prayerTimes = string.Empty;
    private string activity = string.Empty;
    private bool isHome;

    protected override async Task OnInitializedAsync()
    {
        var settings = await SettingsService.LoadSettingsAsync();
        overdueTasks = await ToDoIntegration.GetOverdueTasksAsync();
        prayerTimes = await PrayerTimes.GetPrayerTimesAsync();
        activity = await ActivityWatchIntegration.GetCurrentActivityAsync();
        isHome = await WifiPresence.IsPhoneConnectedAsync();
    }
}
